radx = 2.54
rady = 2.54
larea = 47.62
n_slices <- 50
z <- seq(0, 1, length.out = n_slices)
zabs <- z*htcrown
distfun <- sqrt(1 - ((z-1/2)^2)/((1/2)^2))
rx <- radx*distfun
ry <- rady*distfun
slice_xs_area <- 3.14*rx*ry
slice_xs_vol <- (htcrown/n_slices)*slice_xs_area
slice_volume_frac <- slice_xs_vol/sum(slice_xs_vol)
tibble(
h = httrunk + zabs,
larea = larea*slice_volume_frac
)
}
trying <- at$httrunk[1:nrow(at)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
View(results[["H15_V0.1_L5.485_F0.4_S1"]])
data %>%
filter(value == 595)
View(results_f[["H15_V0.1_L5.485_F0.4_S1"]])
View(results[["H15_V0.1_L5.485_F0.4_S1"]])
View(results[["H15_V0_L0.466_F1.99_S1"]])
View(results[["H15_V0_L1.488_F1.99_S3"]])
View(results[["H15_V0_L2.916_F0.95_S3"]])
View(results[["H15_V0_L4.402_F0.15_S2"]])
at <- results[["H15_V0.1_L5.485_F0.4_S1"]]
trying <- at$httrunk[1:nrow(at)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(at) == 100) {
data <- data %>%
filter(value == 55)
} else if(nrow(at) == 289) {
data <- data %>%
filter(value == 145)
} else if(nrow(at) == 625) {
data <- data %>%
filter(value == 313)
} else if(nrow(at) == 961) {
data <- data %>%
filter(value == 481)
} else if(nrow(at) == 1156) {
data <- data %>%
filter(value == 595)
}
View(data)
at <- results[["H15_V0.1_L0.466_F0.4_S1"]]
trying <- at$httrunk[1:nrow(at)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(at) == 100) {
data <- data %>%
filter(value == 55)
} else if(nrow(at) == 289) {
data <- data %>%
filter(value == 145)
} else if(nrow(at) == 625) {
data <- data %>%
filter(value == 313)
} else if(nrow(at) == 961) {
data <- data %>%
filter(value == 481)
} else if(nrow(at) == 1156) {
data <- data %>%
filter(value == 595)
}
View(data)
at <- results[["H15_V0.1_L0.466_F0.4_S1"]]
trying <- at$httrunk[1:nrow(at)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
View(data)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
}
at <- results[["H15_V0.1_L0.466_F0.4_S1"]]
at <- results[["H15_V0.1_L0.466_F0.4_S1"]]
trying <- at$httrunk[1:nrow(at)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
}
View(data)
View(trying)
# conatnt to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
#getting the LAI above the focal tree
data = results_f[["H15_V0.1_L4.402_F1.75_S3"]]
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H)*47.62
deep_crown <- function(d) {
trying <- at$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
}
}
df <- deep_crown(results[["H15_V0.1_L0.466_F0.4_S1"]] )
View(df)
df <- combinations$name[1:nrow(combinations)] %>%
purrr::map(deep_crown)
df <- results %>%
purrr::map(deep_crown)
View(df)
df <- results[[1:10]] %>%
purrr::map(deep_crown)
df <- results[1:10] %>%
purrr::map(deep_crown)
View(df)
deep_crown <- function(d) {
trying <- at$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
}
}
View(df[["H15_V0_L0.466_F1.99_S1"]])
df <- results %>%
purrr::map(deep_crown)
View(df)
View(df[["H15_V0_L0.466_F1.99_S1"]])
model_simp_nf <- function(data) {
df <- data %>%
mutate(t_h = htcrown + httrunk) %>%
arrange(desc(t_h)) %>%
group_by(t_h, focal) %>%
summarise(larea = sum(larea)) %>%
ungroup() %>%
arrange(desc(t_h)) %>%
mutate(
lai = cumsum(larea)/10204,
light_ft = exp(-0.5*lai),
lai_ppa = floor(lai),
light_ppa = exp(-0.5*lai_ppa)) %>%
filter(focal == "TRUE")
}
#setting up combinations of variables
combinations <- expand_grid(H, V, L, F, S) %>%
mutate(path = sprintf("simulations/H%s_V%s_L%s_F%s_S%s", H, V, L, F, S))
combinations_basenames <- combinations$path %>%
basename()
combinations <- combinations %>%
add_column(name = combinations_basenames)
#loading in all the trees file from MAESPA
results <- combinations$path[1:nrow(combinations)] %>%
purrr::map(load_trees)
names(results) <- combinations$path[1:nrow(combinations)] %>%
basename()
results_f <- results %>%
purrr::map(model_simp_f)
View(results_f)
View(results_f[["H15_V0_L0.466_F1.99_S1"]])
new_cal <- function(data) {
# conatnt to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H)*47.62
}
d <- new_cal(data = results_f[["H15_V0.1_L4.402_F1.75_S3"]])
d <- PAR_calculator_ft(data = results_f[["H15_V0.1_L4.402_F1.75_S3"]])
d <- PAR_calculator_ft(data = results_f[["H15_V0.1_L4.402_F1.75_S3"]])
PAR_calculator_ft <- function(data, indi_la = 47.62) {
met <- readmet(filename = "met.dat", nlines = -1)
la = indi_la
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai)
PAR_calculator <-
tibble(
PAR_inst = met$PAR,
time = met$TIME) %>%
mutate(
delta_t = c(diff(time[1:2]), diff(time)),
absPAR_inst = PAR_inst*exp(-0.5*L_ft),#mu PAR m-2 s-1
W = absPAR_inst/2.02, #W PAR m-2 eqn 38 from paper
MJ = W*0.0036 #MJ PAR m-2 h-1 eqn 12 from paper
) %>%
summarise(absPAR = (sum(MJ*delta_t)*la)) #MJ PAR tree-1 day-1
}
d <- PAR_calculator_ft(data = results_f[["H15_V0.1_L4.402_F1.75_S3"]])
View(d)
new_cal <- function(data) {
# conatnt to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H)*47.62 %>% as_tibble()
}
d <- new_cal(data = results_f[["H15_V0.1_L4.402_F1.75_S3"]])
View(d)
new_cal <- function(data) {
# conatnt to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H)*47.62 %>% as_tibble() %>%
rename(absPAR = value)
}
d <- new_cal(data = results_f[["H15_V0.1_L4.402_F1.75_S3"]])
View(d)
new_results_PAR_ft <- results_f %>%
purrr::map(new_cal)
View(new_results_PAR_ft)
new_combining_results_ft <- function(sim_name) {
df <- combinations %>%
filter(name == sim_name) %>%
bind_cols(new_results_PAR_ft[[sim_name]])
}
new_combined_results_ft <- combinations$name[1:nrow(combinations)] %>%
purrr::map(new_combining_results_ft)
names(new_combined_results_ft) <- combinations$name[1:nrow(combinations)] %>%
basename()
new_final_results_ft <- organising_results(new_combined_results_ft) %>% add_column(model = "FT")
View(new_final_results_ft)
new_final_results_ft %>%
select(F, absPAR, H, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(H))) +
geom_line(aes(colour = as.factor(H))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "PAR", x = "FT height", y = "Absorbed PAR", colour = "Flat top")
read_csv("A.csv")
maespa <- read_csv("A.csv")
new_final_results_ft
maespa <- read_csv("A.csv") %>%
select( H, V, L, F, name, absPAR)
maespa
maespa <- maespa %>%
select( H, V, L, F, name, absPAR) %>%
add_column(model = "maespa")
trying <- rbind(new_final_results_ft, maepsa)
maespa <- maespa %>%
select( H, V, L, F, name, absPAR) %>%
add_column(model = "maespa")
trying <- rbind(new_final_results_ft, maespa)
trying %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
View(df)
View(df[["H15_V0_L0.466_F1.99_S1"]])
View(df[["H15_V0.5_L1.488_F0.85_S1"]])
View(df[["H15_V0_L4.402_F1.25_S1"]])
View(df[["H15_V0.5_L2.916_F0.95_S1"]])
View(trying)
View(df)
View(df[["H15_V0_L0.466_F1.75_S1"]])
View(df[["H15_V0_L4.402_F0.95_S3"]])
View(df[["H15_V0_L1.488_F1.6_S2"]])
View(trying)
d = results[[1000]]
trying <- at$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
View(trying)
View(trying[[1]])
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
View(data)
mm
debugSource('~/Documents/Honours/models/Function_M.R', echo=TRUE)
d = results[[1000]]
ssss
d = results[[1000]]
View(combined_results_ft)
View(combined_results_ft)
}
d = results[[1000]]
trying <- at$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
View(trying)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
}
View(data)
View(trying[[620]])
trying <- d$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
View(trying)
View(trying[[619]])
deep_crown <- function(d) {
trying <- d$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
data <- plyr::ldply(trying, data.frame)
df <- as_tibble(rep(1:length(trying), times = 50)) %>%
arrange(value)
data <- data %>% cbind(df)
data <- data %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(value == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(value == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(value == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(value == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(value == 595)
}
}
df <- results %>%
purrr::map(deep_crown)
View(df)
View(df[["H15_V0.5_L1.488_F1.25_S1"]])
