View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(slices_DC_absPAR[["H15_V0_L2.916_F1.25_fla0.1_S1"]])
summarise_DC <- function(data) {
data <- data %>%
summarise(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
}
summarised_DC_results <-
slices_DC_absPAR %>%
purrr::map(summarise_DC)
View(summarised_DC_results)
View(summarised_DC_results[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
setwd("~/Documents/Honours/models/Different maespa csv")
maespa_fla_0.1 <- read_csv("maespa_fla_0.1.csv")
maespa_fla_0.1 <- maespa_fla_0.1 %>%
mutate(
absPAR_one_s = absPAR,
absPAR_two_s = absPAR
) %>%
select(H, V, L, F, fla, name, absPAR_one_s, absPAR_two_s) %>%
add_column(model = "MAESPA")
final_results_fla_0.1 <- rbind(final_results_DC_fla_0.1, final_results_ft_ppa_fla_0.1)
maespa_fla_0.1 <- read_csv("maespa_fla_0.1.csv")
maespa_fla_0.1 <- maespa_fla_0.1 %>%
mutate(
absPAR_one_s = absPAR,
absPAR_two_s = absPAR
) %>%
select(H, V, L, F, fla, name, absPAR_one_s, absPAR_two_s) %>%
add_column(model = "MAESPA")
maespa_n_others_fla_0.1 <- rbind(final_results_fla_0.1, maespa_fla_0.1)
maespa_n_others_fla_0.1 %>%
select(F, absPAR_two_s, absPAR_one_s, model, V, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "two stream", x = "Focal tree height", y = "Absorbed PAR (MJ tree-1 d-1)", colour =
"Canopy Approximation")
H <- c(15)
V <- c(0, 0.1, 0.25, 0.5)
L <- c(0.44, 1.521, 2.916, 4.556, 5.402)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(0.1)
S <- c(1, 2, 3)
combinations_fla_0.1 <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_fla_0.1/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
results_fla_0.1 <- combinations_fla_0.1$path[1:nrow(combinations_fla_0.1)] %>%
purrr::map(load_trees)
setwd("~/Documents/Honours/models")
combinations_fla_0.1
results_fla_0.1 <- combinations_fla_0.1$path[1:nrow(combinations_fla_0.1)] %>%
purrr::map(load_trees)
names(results_fla_0.1) <- combinations_fla_0.1$path[1:nrow(combinations_fla_0.1)] %>%
basename()
results_fla_0.1
combinations_fla_0.1
View(combinations_fla_0.1)
model_conditions_fla_0.1 <- results_fla_0.1 %>%
purrr::map(model_simp)
results_PAR_ft_fla_0.1 <- model_conditions_fla_0.1 %>%
purrr::map(PAR_calculator_ft)
results_PAR_ppa_fla_0.1 <- model_conditions_fla_0.1 %>%
purrr::map(PAR_calculator_ppa)
final_results_ft_fla_0.1 <- organising_results(results_PAR_ft_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "FLAT TOP")
final_results_ppa_fla_0.1 <- organising_results(results_PAR_ppa_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "PPA")
final_results_ft_ppa_fla_0.1 <- rbind(final_results_ft_fla_0.1, final_results_ppa_fla_0.1) %>%
mutate(
absPAR_one_s =  absPAR_one_s*fla,
absPAR_two_s = absPAR_two_s*fla
)
final_results_ft_ppa_fla_0.1
final_results_ppa_fla_0.1
final_results_ft_ppa_fla_0.1
final_results_ft_fla_0.1
final_results_ft_ppa_fla_0.1
load_trees <- function(path) {
trees <- parseFile(file.path(path,"trees.dat"))
if(trees$plot$notrees == 196) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 105.54 & y == 90.46, TRUE, FALSE))
} else if(trees$plot$notrees == 676) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 101.92 & y == 94.08, TRUE, FALSE))
} else if(trees$plot$notrees == 1296) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 100.8 & y == 95.2, TRUE, FALSE))
} else if(trees$plot$notrees != 196 & trees$plot$notrees != 676 & trees$plot$notrees != 1296) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 98 & y == 98, TRUE, FALSE))
}
data <- data %>%
filter(x > 27.999, x < 168.001, y > 27.999, y < 168.001)
}
model_simp <- function(data) {
df <- data %>%
mutate(t_h = htcrown + httrunk) %>%
arrange(desc(t_h)) %>%
group_by(t_h, focal) %>%
summarise(larea = sum(larea)) %>%
ungroup() %>%
arrange(desc(t_h)) %>%
mutate(
lai = cumsum(larea)/6123,
light_ft = exp(-0.5*lai),
lai_ppa = floor(lai),
light_ppa = exp(-0.5*lai_ppa)) %>%
as_tibble()
}
PAR_calculator_ft <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*L_ft),
PAR_two_s = 0.77*PAR*(exp(-0.77*L_ft) + (1- exp(-0.77*L_ft))*exp(-0.4*L_ft)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
PAR_calculator_ppa <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai_ppa)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*L_ft),
PAR_two_s = 0.77*PAR*(exp(-0.77*L_ft) + (1- exp(-0.77*L_ft))*exp(-0.4*L_ft)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
organising_results <- function(data, comb) {
df <- plyr::ldply(data, data.frame) %>%
bind_cols(comb) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean)
}
deep_leaf_distribtuion <- function(httrunk, htcrown = 6.36, radx = 2.54, rady = 2.54,
larea = 27, n_slices = 50) {
# adaption from Maeswrap, https://github.com/RemkoDuursma/Maeswrap/blob/master/R/coord3dshape.R
z <- seq(0, 1, length.out = n_slices)
zabs <- z*htcrown
distfun <- sqrt(1 - ((z-1/2)^2)/((1/2)^2))
rx <- radx*distfun
ry <- rady*distfun
slice_xs_area <- 3.14*rx*ry
slice_xs_vol <- (htcrown/n_slices)*slice_xs_area
slice_volume_frac <- slice_xs_vol/sum(slice_xs_vol)
tibble(
h = httrunk + zabs,
larea = larea*slice_volume_frac
)
}
deep_crown_set_up <- function(d) {
deep_crown_distribution <-
d$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
df <- tibble(
tree_num = rep(1:length(deep_crown_distribution), times = 50)) %>%
arrange(tree_num)
data <- plyr::ldply(deep_crown_distribution, data.frame) %>%
cbind(df) %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/6123)
if(nrow(data) == 100*50) {
data <- data %>%
filter(tree_num == 55)
} else if(nrow(data) == 324*50) {
data <- data %>%
filter(tree_num == 171)
} else if(nrow(data) == 676*50) {
data <- data %>%
filter(tree_num == 351)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(tree_num == 481)
} else if(nrow(data) == 1225*50) {
data <- data %>%
filter(tree_num == 613)
}
}
PAR_calculator_DC <- function(la) {
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
met <- readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*la),
PAR_two_s = 0.77* PAR*(exp(-0.77*la) + (1- exp(-0.77*la))*exp(-0.4*la)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH )
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * 1,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * 1)
}
applying_DC <- function(data) {
data$la[1:nrow(data)] %>%
purrr::map(PAR_calculator_DC) %>%
plyr::ldply(., data.frame)
}
summarise_DC <- function(data) {
data <- data %>%
summarise(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
}
#stand functions
load_trees <- function(path) {
trees <- parseFile(file.path(path,"trees.dat"))
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x > 27.999 & x < 168.001 & y > 27.999 & y < 168.001, TRUE, FALSE))
data <- data %>%
filter(x > 27.999, x < 168.001, y > 27.999, y < 168.001)
}
load_trees <- function(path) {
trees <- parseFile(file.path(path,"trees.dat"))
if(trees$plot$notrees == 196) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 105.54 & y == 90.46, TRUE, FALSE))
} else if(trees$plot$notrees == 676) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 101.92 & y == 94.08, TRUE, FALSE))
} else if(trees$plot$notrees == 1296) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 100.8 & y == 95.2, TRUE, FALSE))
} else if(trees$plot$notrees != 196 & trees$plot$notrees != 676 & trees$plot$notrees != 1296) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 98 & y == 98, TRUE, FALSE))
}
data <- data %>%
filter(x > 27.999, x < 168.001, y > 27.999, y < 168.001)
}
model_simp <- function(data) {
df <- data %>%
mutate(t_h = htcrown + httrunk) %>%
arrange(desc(t_h)) %>%
group_by(t_h, focal) %>%
summarise(larea = sum(larea)) %>%
ungroup() %>%
arrange(desc(t_h)) %>%
mutate(
lai = cumsum(larea)/6123,
light_ft = exp(-0.5*lai),
lai_ppa = floor(lai),
light_ppa = exp(-0.5*lai_ppa)) %>%
as_tibble()
}
PAR_calculator_ft <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*L_ft),
PAR_two_s = 0.77*PAR*(exp(-0.77*L_ft) + (1- exp(-0.77*L_ft))*exp(-0.4*L_ft)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
PAR_calculator_ppa <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai_ppa)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*L_ft),
PAR_two_s = 0.77*PAR*(exp(-0.77*L_ft) + (1- exp(-0.77*L_ft))*exp(-0.4*L_ft)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
organising_results <- function(data, comb) {
df <- plyr::ldply(data, data.frame) %>%
bind_cols(comb) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean)
}
deep_leaf_distribtuion <- function(httrunk, htcrown = 6.36, radx = 2.54, rady = 2.54,
larea = 27, n_slices = 50) {
# adaption from Maeswrap, https://github.com/RemkoDuursma/Maeswrap/blob/master/R/coord3dshape.R
z <- seq(0, 1, length.out = n_slices)
zabs <- z*htcrown
distfun <- sqrt(1 - ((z-1/2)^2)/((1/2)^2))
rx <- radx*distfun
ry <- rady*distfun
slice_xs_area <- 3.14*rx*ry
slice_xs_vol <- (htcrown/n_slices)*slice_xs_area
slice_volume_frac <- slice_xs_vol/sum(slice_xs_vol)
tibble(
h = httrunk + zabs,
larea = larea*slice_volume_frac
)
}
deep_crown_set_up <- function(d) {
deep_crown_distribution <-
d$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
df <- tibble(
tree_num = rep(1:length(deep_crown_distribution), times = 50)) %>%
arrange(tree_num)
data <- plyr::ldply(deep_crown_distribution, data.frame) %>%
cbind(df) %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/6123)
if(nrow(data) == 100*50) {
data <- data %>%
filter(tree_num == 55)
} else if(nrow(data) == 324*50) {
data <- data %>%
filter(tree_num == 171)
} else if(nrow(data) == 676*50) {
data <- data %>%
filter(tree_num == 351)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(tree_num == 481)
} else if(nrow(data) == 1225*50) {
data <- data %>%
filter(tree_num == 613)
}
}
PAR_calculator_DC <- function(la) {
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
met <- readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*la),
PAR_two_s = 0.77* PAR*(exp(-0.77*la) + (1- exp(-0.77*la))*exp(-0.4*la)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH )
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * 1,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * 1)
}
applying_DC <- function(data) {
data$la[1:nrow(data)] %>%
purrr::map(PAR_calculator_DC) %>%
plyr::ldply(., data.frame)
}
summarise_DC <- function(data) {
data <- data %>%
summarise(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
}
results_fla_0.1
deep_crown <- results_fla_0.1 %>%
purrr::map(deep_crown_set_up)
slices_DC_absPAR <- deep_crown %>%
purrr::map(applying_DC)
combinations_fla_0.1
View(combinations_fla_0.1)
final_results_ft_ppa_fla_0.1
for(i in 1:nrow(combinations_fla_0.1)) {
slices_DC_absPAR[[i]] <- slices_DC_absPAR[[i]] %>%
mutate(
absPAR_one_s = absPAR_one_s*combinations_fla_0.1$fla[[i]],
absPAR_two_s = absPAR_two_s*combinations_fla_0.1$fla[[i]])
}
summarised_DC_results <-
slices_DC_absPAR %>%
purrr::map(summarise_DC)
final_results_DC_fla_0.1 <- organising_results(summarised_DC_results, combinations_fla_0.1) %>%
add_column(model = "DEEP CROWN")
final_results_fla_0.1 <- rbind(final_results_DC_fla_0.1, final_results_ft_ppa_fla_0.1)
final_results_fla_0.1
View(final_results_fla_0.1)
setwd("~/Documents/Honours/models/Different maespa csv")
maespa_fla_0.1 <- read_csv("maespa_fla_0.1.csv")
maespa_fla_0.1 <- maespa_fla_0.1 %>%
mutate(
absPAR_one_s = absPAR,
absPAR_two_s = absPAR
) %>%
select(H, V, L, F, fla, name, absPAR_one_s, absPAR_two_s) %>%
add_column(model = "MAESPA")
maespa_n_others_fla_0.1 <- rbind(final_results_fla_0.1, maespa_fla_0.1)
setwd("~/Documents/Honours/models")
maespa_n_others_fla_0.1 %>%
select(F, absPAR_two_s, absPAR_one_s, model, V, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "two stream", x = "Focal tree height", y = "Absorbed PAR (MJ tree-1 d-1)", colour =
"Canopy Approximation")
names <- as_labeller(
c(`0` = "V 0", `0.1` = "V 0.1", `0.25` = "V 0.25", `0.5` = "V 0.5", `0.75` = "V 0.75",
`0.44` = "LAI 0.44", `1.521`= "LAI 1.429", `2.916`= "LAI 2.98", `4.556`= "LAI 4.238", `5.402`= "LAI 5.402")
)
maespa_n_others_fla_0.1 %>%
select(F, absPAR_two_s, absPAR_one_s, model, V, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "two stream", x = "Focal tree height", y = "Absorbed PAR (MJ tree-1 d-1)", colour =
"Canopy Approximation")
H <- c(15)
V <- c(0, 0.1, 0.25, 0.5)
L <- c(0.44, 1.521, 2.916, 4.556, 5.402)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(27)
S <- c(1, 2, 3)
setwd("~/Documents/Honours/models")
setwd("~/Documents/Honours/models")
H <- c(15)
V <- c(0, 0.1, 0.25, 0.5)
L <- c(0.44, 1.521, 2.916, 4.556, 5.402)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(27)
S <- c(1, 2, 3)
