arrange(tree_num)
data <- plyr::ldply(deep_crown_distribution, data.frame) %>%
cbind(df) %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
deep_crown_distribution <-
d$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
df <- tibble(
tree_num = rep(1:length(deep_crown_distribution), times = 50)) %>%
arrange(tree_num)
data <- plyr::ldply(deep_crown_distribution, data.frame) %>%
cbind(df) %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
data
if(nrow(data) == 100*50) {
data <- data %>%
filter(tree_num == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(tree_num == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(tree_num == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(tree_num == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(tree_num == 595)
}
data
data <- data %>% as_tibble()
data
View(deep_crown)
View(deep_crown[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(deep_crown[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(deep_crown[["H15_V0.25_L1.488_F1.05_fla0.1_S1"]])
View(deep_crown[["H15_V0_L4.402_F0.95_fla0.1_S2"]])
View(deep_crown[["H15_V0.1_L5.485_F1.05_fla0.1_S2"]])
deep_crown[[1]]
deep_crown[[1]]
met <- readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR)
deep_crown[[1]] %>%
select(la)
deep_crown[[1]] %>%
select(la) %>%
mutate(
PAR_one_s = 0.77 * met$PAR * exp(-0.77*la),
PAR_two_s = 0.77* met$PAR*(exp(-0.77*la) + (1- exp(-0.77*la))*exp(-0.4*la)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH )
trying <- function(la) {
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
met <- readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*la),
PAR_two_s = 0.77* PAR*(exp(-0.77*la) + (1- exp(-0.77*la))*exp(-0.4*la)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH )
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
d <-
d$la[1:nrow(d)] %>%
purrr::map(trying)
d
View(d)
d <-
deep_crown[[1]]$la[1:nrow(deep_crown[[1]])] %>%
purrr::map(trying)
View(d)
View(d[[1]])
View(deep_crown)
View(d[[1]])
data <- plyr::ldply(d, data.frame)
data
df = pracma::trapz(1:50, data$absPAR_two_s)
data <- plyr::ldply(d, data.frame)
data
mean(data$absPAR_two_s)*0.1
trying <- function(la) {
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
met <- readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*la),
PAR_two_s = 0.77* PAR*(exp(-0.77*la) + (1- exp(-0.77*la))*exp(-0.4*la)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH )
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * 0.1,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * 0.1)
}
d <-
deep_crown[[1]]$la[1:nrow(deep_crown[[1]])] %>%
purrr::map(trying)
data <- plyr::ldply(d, data.frame)
mean(data$absPAR_two_s)*0.1
mean(data$absPAR_two_s)
View(final_results_fla_0.1)
View(maespa_n_others_fla_0.1)
View(deep_crown)
View(deep_crown[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(d)
d <-
deep_crown[[1]]$la[1:nrow(deep_crown[[1]])] %>%
purrr::map(trying) %>%
plyr::ldply(d, data.frame)
View(d)
d <-
deep_crown[[1]]$la[1:nrow(deep_crown[[1]])] %>%
purrr::map(trying) %>%
plyr::ldply(., data.frame)
View(d)
mean(d$absPAR_two_s)
d <- function(data) {
data$la[1:nrow(data)] %>%
purrr::map(trying) %>%
plyr::ldply(., data.frame)
}
df <- deep_crown %>%
purrr::map(d)
View(df)
View(df[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
results_PAR_ppa_fla_0.1
PAR_calculator_DC <- function(la) {
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
met <- readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*la),
PAR_two_s = 0.77* PAR*(exp(-0.77*la) + (1- exp(-0.77*la))*exp(-0.4*la)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH )
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * 0.1,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * 0.1)
}
applying_DC <- function(data) {
data$la[1:nrow(data)] %>%
purrr::map(PAR_calculator_DC) %>%
plyr::ldply(., data.frame)
}
slices_DC_absPAR <- deep_crown %>%
purrr::map(applying_DC)
View(slices_DC_absPAR)
View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(results_PAR_ft_fla_0.1)
View(results_PAR_ft_fla_0.1[["H15_V0_L0.466_F1.99_fla0.1_S2"]])
View(slices_DC_absPAR)
View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
slices_DC_absPAR %>%
mutate(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
mean <- function(data) {
data %>%
mutate(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
}
mean_DC_absPAR <- slices_DC_absPAR %>%
purrr:map(mean)
mean_DC_absPAR <- slices_DC_absPAR %>%
purrr::map(mean)
mean <- function(data) {
df <- data %>%
mutate(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
}
mean_DC_absPAR <- slices_DC_absPAR %>%
purrr::map(mean)
slices_DC_absPAR[[1]] %>%
mutate(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
slices_DC_absPAR[[1]]
slices_DC_absPAR[[1]] %>% as_tibble() %>%
mutate(
absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s)
)
lapply(slices_DC_absPAR[[1]], class)
slices_DC_absPAR[[1]] %>%
mutate(
absPAR_one_s = 2*absPAR_one_s,
absPAR_two_s = 2*absPAR_two_s
)
slices_DC_absPAR[[1]] %>%
summarise(absPAR_one_s = mean(absPAR_one_s),
absPAR_two_s = mean(absPAR_two_s))
slices_DC_absPAR[[1]] %>%
summarise(absPAR_one_s = mean(absPAR_one_s))
%>%
slices_DC_absPAR[[1]]
slices_DC_absPAR[[1]] %>%
summarise(absPAR_one_s_mean = mean(absPAR_one_s),
absPAR_two_s_mean = mean(absPAR_two_s))
slices_DC_absPAR[[1]] %>%
transmute(absPAR_one_s_mean = mean(absPAR_one_s),
absPAR_two_s_mean = mean(absPAR_two_s))
d <- slices_DC_absPAR[[1]] %>% as_tibble()
View(d)
d %>%
summarise(absPAR_one_s_mean = mean(absPAR_one_s),
absPAR_two_s_mean = mean(absPAR_two_s))
tibble(absPAR_one_s_mean = mean(d$absPAR_one_s),
absPAR_two_s_mean = mean(d$absPAR_two_s))
View(slices_DC_absPAR)
View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
maespa_n_others_fla_0.1 %>%
select(F, absPAR_two_s, absPAR_one_s, model, V, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "two stream", x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
View(slices_DC_absPAR)
View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(deep_crown)
View(deep_crown[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
slices_DC_absPAR
View(slices_DC_absPAR)
View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(results_fla_0.1)
View(results_fla_0.1[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(maespa_fla_0.1)
View(slices_DC_absPAR)
View(slices_DC_absPAR[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
results_fla_0.1
View(results_PAR_ppa_fla_0.1)
View(results_PAR_ppa_fla_0.1[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(results_fla_0.1)
View(results_fla_0.1[["H15_V0_L0.466_F1.99_fla0.1_S1"]])
View(results_fla_0.1[["H15_V0.1_L4.402_F1.25_fla0.1_S2"]])
maespa_n_others_fla_47.62 %>%
select(F, absPAR_two_s, model, V, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "no self-shading", x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
PAR_calculator_ppa <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai_ppa)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*L_ft),
PAR_two_s = 0.77*PAR*(exp(-0.77*L_ft) + (1- exp(-0.77*L_ft))*exp(-0.4*L_ft)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
PAR_calculator_ft <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR_one_s = 0.77 * PAR * exp(-0.77*L_ft),
PAR_two_s = 0.77*PAR*(exp(-0.77*L_ft) + (1- exp(-0.77*L_ft))*exp(-0.4*L_ft)),
MJ_per_H_one_s = PAR_one_s * UMOLperStoMJperH,
MJ_per_H_two_s = PAR_two_s * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
tibble(absPAR_one_s = pracma::trapz(met$time, met$MJ_per_H_one_s) * indi_la,
absPAR_two_s = pracma::trapz(met$time, met$MJ_per_H_two_s) * indi_la)
}
#fla 47.62
H <- c(15)
V <- c(0.00, 0.10, 0.25, 0.50)
L <- c(0.466, 1.488, 2.916, 4.402, 5.485)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(47.62)
S <- c(1, 2, 3)
combinations_fla_47.62 <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_fla_47.62/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
results_fla_47.62 <- combinations_fla_47.62$path[1:nrow(combinations_fla_47.62)] %>%
purrr::map(load_trees)
maespa_n_others_fla_0.1 %>%
select(F, absPAR_two_s, absPAR_one_s, model, V, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(title = "two stream", x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others_c_fla %>%
select(F, absPAR_two_s, model, fla, L) %>%
ggplot(aes(F, absPAR_two_s)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
#setting up with different focal las
H <- c(15)
V <- c(0.10)
L <- c(2.916)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(0.1, 0.5, 1, 10, 50)
S <- c(1, 2, 3)
combinations_c_fla <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_c_fla/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
results_c_fla <- combinations_c_fla$path[1:nrow(combinations_c_fla)] %>%
purrr::map(load_trees)
names(results_c_fla) <- combinations_c_fla$path[1:nrow(combinations_c_fla)] %>%
basename()
model_conditions_c_fla <- results_c_fla %>%
purrr::map(model_simp)
results_PAR_ft_fla_47.62 <- model_conditions_fla_47.62 %>%
purrr::map(PAR_calculator_ft)
H <- c(15)
V <- c(0.10)
L <- c(2.916)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(0.1, 0.5, 1, 10, 50)
S <- c(1, 2, 3)
combinations_c_fla <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_c_fla/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
results_c_fla <- combinations_c_fla$path[1:nrow(combinations_c_fla)] %>%
purrr::map(load_trees)
names(results_c_fla) <- combinations_c_fla$path[1:nrow(combinations_c_fla)] %>%
basename()
model_conditions_c_fla <- results_c_fla %>%
purrr::map(model_simp)
results_PAR_ft_c_fla <- model_conditions_c_fla %>%
purrr::map(PAR_calculator_ft)
results_PAR_ppa_c_fla <- model_conditions_c_fla %>%
purrr::map(PAR_calculator_ppa)
final_results_ft_c_fla <- organising_results(results_PAR_ft_c_fla, combinations_c_fla) %>%
add_column(model = "FT")
library(Maeswrap)
library(tidyverse)
library(ggplot2)
final_results_ft_c_fla <- organising_results(results_PAR_ft_c_fla, combinations_c_fla) %>%
add_column(model = "FT")
organising_results <- function(data, comb) {
df <- plyr::ldply(data, data.frame) %>%
bind_cols(comb) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s)  %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean)
}
final_results_ft_c_fla <- organising_results(results_PAR_ft_c_fla, combinations_c_fla) %>%
add_column(model = "FT")
view(results_PAR_ft_c_fla)
results_PAR_ppa_c_fla
View(results_PAR_ppa_c_fla)
View(results_PAR_ppa_c_fla[["H15_V0.1_L2.916_F1.99_fla0.1_S1"]])
final_results_ft_c_fla <- organising_results(results_PAR_ft_c_fla, combinations_c_fla) %>%
add_column(model = "FT")
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame)
View(df)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean)
absPAR_one_s
class(absPAR_one_s)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
)
class(df)
class(df$absPAR_one_s)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean())
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
)
View(df)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR_one_s, absPAR_two_s), mean())
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(c("absPAR_one_s", "absPAR_two_s"), mean)
df <- plyr::ldply(results_PAR_ft_c_fla, data.frame) %>%
bind_cols(combinations_c_fla) %>%
select(H, V, L, F, fla, S, name, absPAR_one_s, absPAR_two_s) %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
)
View(df)
mean(df$absPAR_one_s)
mean(df$H)
mean
