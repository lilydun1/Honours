c(`0.1` = "f_la 0.1", `0.5` = "f_la 0.5", `1` = "f_la 1",
`10` = "f_la 10", `50` = "f_la 50")
)
maespa_n_others %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
final_results_new %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others %>%
select(F, absPAR, model, fla, L) %>%
filter(F == 1) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
load_trees <- function(path) {
trees <- parseFile(file.path(path,"trees.dat"))
if(trees$plot$notrees == 196) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 105.54 & y == 90.46, TRUE, FALSE))
} else if(trees$plot$notrees != 2304 & trees$plot$notrees != 196) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 98 & y == 98, TRUE, FALSE))
} else if(trees$plot$notrees == 2304) {
data <- tibble(radx = trees$indivradx$values, rady =  trees$indivrady$values,  htcrown = trees$indivhtcrown$values,
diam = trees$indivdiam$values,  httrunk = trees$indivhttrunk$values, larea = trees$indivlarea$values,
x = trees$xy$xycoords[seq(1, length(trees$xy$xycoords), by = 2)],
y = trees$xy$xycoords[seq(2, length(trees$xy$xycoords), by = 2)],
focal = ifelse(x == 100.09 & y == 95.91, TRUE, FALSE))
}
data <- data %>%
filter(x > 27.999, x < 168.001, y > 27.999, y < 168.001)
}
model_simp <- function(data) {
df <- data %>%
mutate(t_h = htcrown + httrunk) %>%
arrange(desc(t_h)) %>%
group_by(t_h, focal) %>%
summarise(larea = sum(larea)) %>%
ungroup() %>%
arrange(desc(t_h)) %>%
mutate(
lai = cumsum(larea)/10204,
light_ft = exp(-0.5*lai),
lai_ppa = floor(lai),
light_ppa = exp(-0.5*lai_ppa)) %>%
as_tibble()
}
PAR_calculator_ft <- function(data, indi_la = 47.62) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H) * indi_la %>%
as_tibble() %>%
rename(absPAR = value)
}
PAR_calculator_ppa <- function(data, indi_la = 47.62) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai_ppa)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
df <- pracma::trapz(met$time, met$MJ_per_H) * indi_la %>%
as_tibble() %>%
rename(absPAR = value)
}
organising_results <- function(data) {
df <- plyr::ldply(data, data.frame) %>%
bind_cols(combinations) %>%
select(H, V, L, F, S, name, absPAR)  %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, name) %>%
summarise_at(vars(absPAR), mean)
}
organising_results_new <- function(data) {
df <- plyr::ldply(data, data.frame) %>%
bind_cols(combinations_new) %>%
select(H, V, L, F, fla, S, name, absPAR)  %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR), mean)
}
deep_leaf_distribtuion <- function(httrunk, htcrown = 6.36, radx = 2.54, rady = 2.54,
larea = 47.62, n_slices = 50) {
# adaption from Maeswrap, https://github.com/RemkoDuursma/Maeswrap/blob/master/R/coord3dshape.R
z <- seq(0, 1, length.out = n_slices)
zabs <- z*htcrown
distfun <- sqrt(1 - ((z-1/2)^2)/((1/2)^2))
rx <- radx*distfun
ry <- rady*distfun
slice_xs_area <- 3.14*rx*ry
slice_xs_vol <- (htcrown/n_slices)*slice_xs_area
slice_volume_frac <- slice_xs_vol/sum(slice_xs_vol)
tibble(
h = httrunk + zabs,
larea = larea*slice_volume_frac
)
}
deep_crown_set_up <- function(d) {
deep_crown_distribution <-
d$httrunk[1:nrow(d)] %>%
purrr::map(deep_leaf_distribtuion)
df <- tibble(
tree_num = rep(1:length(deep_crown_distribution), times = 50)) %>%
arrange(tree_num)
data <- plyr::ldply(deep_crown_distribution, data.frame) %>%
cbind(df) %>%
arrange(desc(h)) %>%
mutate(la = cumsum(larea)/10204)
if(nrow(data) == 100*50) {
data <- data %>%
filter(tree_num == 55)
} else if(nrow(data) == 289*50) {
data <- data %>%
filter(tree_num == 145)
} else if(nrow(data) == 625*50) {
data <- data %>%
filter(tree_num == 313)
} else if(nrow(data) == 961*50) {
data <- data %>%
filter(tree_num == 481)
} else if(nrow(data) == 1156*50) {
data <- data %>%
filter(tree_num == 595)
}
}
H <- c(15)
V <- c(0.00, 0.10, 0.25, 0.50)
L <- c(0.466, 1.488, 2.916, 4.402, 5.485)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
S <- c(1, 2, 3)
#setting up combinations of variables
combinations <- expand_grid(H, V, L, F, S) %>%
mutate(path = sprintf("simulations/H%s_V%s_L%s_F%s_S%s", H, V, L, F, S)) %>%
add_column(name = basename(.$path))
#loading in all the trees file from MAESPA
results <- combinations$path[1:nrow(combinations)] %>%
purrr::map(load_trees)
names(results) <- combinations$path[1:nrow(combinations)] %>%
basename()
#setting up the lai and light conditions for ft and ppa
model_conditions <- results %>%
purrr::map(model_simp)
#working out the absPAR for the focal tree in each of the MAESPA simulations
results_PAR_ft <- model_conditions %>%
purrr::map(PAR_calculator_ft)
results_PAR_ppa <- model_conditions %>%
purrr::map(PAR_calculator_ppa)
#turning the list of lists into a tibble, adding combination variables and averaging the three seeds
final_results_ft <- organising_results(results_PAR_ft) %>% add_column(model = "FT")
final_results_ppa <- organising_results(results_PAR_ppa) %>% add_column(model = "PPA")
final_results <- rbind(final_results_ft, final_results_ppa)
final_results %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
#setting up with different focal las
H <- c(15)
V <- c(0.10)
L <- c(2.916)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(0.1, 0.5, 1, 10, 50)
S <- c(1, 2, 3)
combinations_new <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_new/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
#loading in all the trees file from MAESPA
results_new <- combinations_new$path[1:nrow(combinations_new)] %>%
purrr::map(load_trees)
names(results_new) <- combinations_new$path[1:nrow(combinations_new)] %>%
basename()
#setting up the lai and light conditions for ft and ppa
model_conditions_new <- results_new %>%
purrr::map(model_simp)
#working out the absPAR for the focal tree in each of the MAESPA simulations
results_PAR_ft_new <- model_conditions_new %>%
purrr::map(PAR_calculator_ft)
results_PAR_ppa_new <- model_conditions_new %>%
purrr::map(PAR_calculator_ppa)
#turning the list of lists into a tibble, adding combination variables and averaging the three seeds
final_results_ft_new <- organising_results_new(results_PAR_ft_new) %>% add_column(model = "FT")
final_results_ppa_new <- organising_results_new(results_PAR_ppa_new) %>% add_column(model = "PPA")
final_results_new <- rbind(final_results_ft_new, final_results_ppa_new) %>%
mutate(
absPAR = (absPAR/47.62)*fla
)
#maespa
maespa <- read_csv("different_la.csv")
maespa <- maespa %>%
select(H, V, L, F, fla, name, absPAR) %>%
add_column(model = "maespa")
maespa_n_others <- rbind(final_results_new, maespa)
maespa_n_others %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
View(deep_crown)
deep_crown_distribution
View(deep_crown_distribution)
setwd("~/Documents/Honours/models/0.1_hr")
hour <- readhrflux(filename = "hrflux.dat")
View(hour)
final_results %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others <- rbind(final_results, maespa)
maespa_n_others_fla <- rbind(final_results_new, maespa)
maespa_n_others_fla %>%
select(F, absPAR, model, fla, L) %>%
filter(F == 1) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others_fla %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
final_results %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
#maespa
maespa_fla <- read_csv("different_la.csv")
maespa_fla <- maespa_fla %>%
select(H, V, L, F, fla, name, absPAR) %>%
add_column(model = "maespa")
#maespa
maespa <- read_csv("A.csv")
setwd("~/Documents/Honours/models")
#maespa
maespa <- read_csv("A.csv")
maespa <- maespa %>%
select(H, V, L, F, name, absPAR) %>%
add_column(model = "maespa")
maespa_n_others <- rbind(final_results, maespa)
maespa_n_others %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
maespa_n_others_fla %>%
select(F, absPAR, model, fla, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_wrap(~fla, scales = "free", labeller = names_fla) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
combinations_fla_0.1 <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_fla_0.1/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
library(Maeswrap)
library(tidyverse)
library(ggplot2)
H <- c(15)
V <- c(0.00, 0.10, 0.25, 0.50)
L <- c(0.466, 1.488, 2.916, 4.402, 5.485)
F <- c(1.99, 1.85, 1.75, 1.60, 1.50, 1.35, 1.25, 1.15, 1.05, 1.00,
0.95, 0.85, 0.75, 0.65, 0.50, 0.40, 0.25, 0.15, 0.01)
fla <- c(0.1)
S <- c(1, 2, 3)
combinations_fla_0.1 <- expand_grid(H, V, L, F, fla, S) %>%
mutate(path = sprintf("simulations_fla_0.1/H%s_V%s_L%s_F%s_fla%s_S%s", H, V, L, F, fla, S)) %>%
add_column(name = basename(.$path))
#loading in all the trees file from MAESPA
results_fla_0.1 <- combinations_fla_0.1$path[1:nrow(combinations_fla_0.1)] %>%
purrr::map(load_trees)
names(results_fla_0.1) <- combinations_fla_0.1$path[1:nrow(combinations_fla_0.1)] %>%
basename()
#setting up the lai and light conditions for ft and ppa
model_conditions_fla_0.1 <- results_fla_0.1 %>%
purrr::map(model_simp)
#working out the absPAR for the focal tree in each of the MAESPA simulations
results_PAR_ft_fla_0.1 <- model_conditions_fla_0.1 %>%
purrr::map(PAR_calculator_ft)
results_PAR_ppa_fla_0.1 <- model_conditions_fla_0.1 %>%
purrr::map(PAR_calculator_ppa)
#turning the list of lists into a tibble, adding combination variables and averaging the three seeds
final_results_ft_fla_0.1 <- organising_results(results_PAR_ft_fla_0.1, model_conditions_fla_0.1) %>%
add_column(model = "FT")
#turning the list of lists into a tibble, adding combination variables and averaging the three seeds
final_results_ft_fla_0.1 <- organising_results(results_PAR_ft_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "FT")
organising_results <- function(data, comb) {
df <- plyr::ldply(data, data.frame) %>%
bind_cols(comb) %>%
select(H, V, L, F, fla, S, name, absPAR)  %>%
mutate(
name = name %>% gsub("_S[1-3]", "",., perl = TRUE)
) %>%
group_by(H, V, L, F, fla, name) %>%
summarise_at(vars(absPAR), mean)
}
View(organising_results)
organising_results(results_PAR_ft_fla_0.1, combinations_fla_0.1)
#turning the list of lists into a tibble, adding combination variables and averaging the three seeds
final_results_ft_fla_0.1 <- organising_results(results_PAR_ft_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "FT")
final_results_ppa_fla_0.1 <- organising_results(results_PAR_ppa_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "PPA")
final_results_fla_0.1 <- rbind(final_results_ft_fla_0.1, final_results_ppa_fla_0.1)
maespa_fla_0.1 <- read_csv("maespa_fla_0.1.csv")
maespa_fla_0.1 <- maespa_fla_0.1 %>%
select(H, V, L, F, name, absPAR) %>%
add_column(model = "maespa")
maespa_n_others_fla_0.1 <- rbind(final_results_fla_0.1, maespa_fla_0.1)
maespa_n_others_fla_0.1 %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
PAR_calculator_ft <- function(data, indi_la = 0.1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H) * indi_la %>%
as_tibble() %>%
rename(absPAR = value)
}
final_results_fla_0.1 <- rbind(final_results_ft_fla_0.1, final_results_ppa_fla_0.1) %>%
mutate(
absPAR = (absPAR/47.62)*fla
)
maespa_fla_0.1 <- read_csv("maespa_fla_0.1.csv")
maespa_fla_0.1 <- maespa_fla_0.1 %>%
select(H, V, L, F, name, absPAR) %>%
add_column(model = "maespa")
maespa_n_others_fla_0.1 <- rbind(final_results_fla_0.1, maespa_fla_0.1)
maespa_n_others_fla_0.1 %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
PAR_calculator_ft <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft <- data %>%
filter(focal == "TRUE") %>%
pull(lai)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
pracma::trapz(met$time, met$MJ_per_H) * indi_la %>%
as_tibble() %>%
rename(absPAR = value)
}
PAR_calculator_ppa <- function(data, indi_la = 1) {
# constant to converts ymol/s to M J / h
UMOLperStoMJperH <-
3600 /  # s / hr
4.57 /  # umol quanta / J
10^6    # J / MJ
L_ft = data %>%
filter(focal == "TRUE") %>%
pull(lai_ppa)
# load met and convert PAR to J/hr
met <-
readmet(filename = "met.dat", nlines = -1) %>%
as_tibble() %>%
select(time = TIME, PAR) %>%
mutate(
PAR = 0.77 * PAR * exp(-0.77*L_ft),
MJ_per_H = PAR  * UMOLperStoMJperH  # MJ
)
# integrate over the day using trapezoidal integration
df <- pracma::trapz(met$time, met$MJ_per_H) * indi_la %>%
as_tibble() %>%
rename(absPAR = value)
}
results_PAR_ft_fla_0.1 <- model_conditions_fla_0.1 %>%
purrr::map(PAR_calculator_ft)
results_PAR_ppa_fla_0.1 <- model_conditions_fla_0.1 %>%
purrr::map(PAR_calculator_ppa)
final_results_ft_fla_0.1 <- organising_results(results_PAR_ft_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "FT")
final_results_ppa_fla_0.1 <- organising_results(results_PAR_ppa_fla_0.1, combinations_fla_0.1) %>%
add_column(model = "PPA")
final_results_fla_0.1 <- rbind(final_results_ft_fla_0.1, final_results_ppa_fla_0.1) %>%
mutate(
absPAR = absPAR*fla
)
maespa_fla_0.1 <- read_csv("maespa_fla_0.1.csv")
maespa_fla_0.1 <- maespa_fla_0.1 %>%
select(H, V, L, F, name, absPAR) %>%
add_column(model = "maespa")
maespa_n_others_fla_0.1 <- rbind(final_results_fla_0.1, maespa_fla_0.1)
maespa_n_others_fla_0.1 %>%
select(F, absPAR, model, V, L) %>%
ggplot(aes(F, absPAR)) +
geom_point(aes(colour = as.factor(model))) +
geom_line(aes(colour = as.factor(model))) +
facet_grid(rows = vars(V), cols = vars(L), labeller = names) +
labs(x = "Focal tree height", y = "Absorbed PAR", colour = "Model")
